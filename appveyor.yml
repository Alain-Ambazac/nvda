version: "{branch}-{build}"

branches:
 only:
  - i5499
  - /try-.*/

environment:
 PY_PYTHON: 2.7-32
 encFileKey:
  secure: ekOvuyywHuDdGZmRmoj+b3jfrq39A2xlx4RD5ZUGd/8=
 symstore: C:\Program Files (x86)\Windows Kits\10\Debuggers\x64\symstore.exe

init:
 - ps: |
     if ($env:APPVEYOR_REPO_TAG_NAME -and $env:APPVEYOR_REPO_TAG_NAME.StartsWith("release-")) {
      # Strip "release-" prefix.
      $version = $env:APPVEYOR_REPO_TAG_NAME.Substring(8)
      Set-AppveyorBuildVariable "release" "1"
     } else {
      $version = "$env:APPVEYOR_REPO_BRANCH-$env:APPVEYOR_BUILD_NUMBER," + $env:APPVEYOR_REPO_COMMIT.Substring(0, 8)
     }
     Update-AppveyorBuild -Version $version

clone_depth: 1

install:
 - cd appveyor
 # Decrypt files.
 - openssl enc -aes-256-cbc -d -pass pass:%encFileKey% -in authenticode.pfx.enc -out authenticode.pfx
 - openssl enc -aes-256-cbc -d -pass pass:%encFileKey% -in ssh_id_rsa.enc -out ssh_id_rsa
 # Install ssh stuff.
 - copy ssh_id_rsa %userprofile%\.ssh\id_rsa
 - type ssh_known_hosts >> %userprofile%\.ssh\known_hosts
 - cd ..
 - git submodule update --init

build_script:
 - ps: |
     $sconsArgs = "launcher version=$env:APPVEYOR_BUILD_VERSION"
     if ($env:release) {
      $sconsArgs += " changes userGuide developerGuide release=1"
      if ($env:APPVEYOR_REPO_TAG_NAME.Contains("rc")) {
       $updateType = "beta"
      } else {
       $updateType = "stable"
      }
     } elseif (!$env:APPVEYOR_REPO_BRANCH.StartsWith("try-")) {
      $updateType = "snapshot:$env:APPVEYOR_REPO_BRANCH"
     }
     if ($updateType) {
      $sconsArgs += " updateVersionType=$updateType"
     }
     $sconsArgs += ' publisher="NV Access"'
     $sconsArgs += " certFile=appveyor\authenticode.pfx certTimestampServer=http://timestamp.digicert.com"
     Set-AppveyorBuildVariable "sconsArgs" $sconsArgs
 - 'echo scons args: %sconsArgs%'
 - py scons.py %sconsArgs%
 # Build symbol store.
 - ps: |
     foreach ($syms in "source\*.pdb", "source\lib\*.pdb", "source\lib64\*.pdb", "source\synthDrivers\*.pdb") {
      & $env:symstore add /s symbols /compress -:NOREFS /t NVDA /f $syms
     }
 - cd symbols
 - 7z a -tzip -r ..\output\symbols.zip *.pd_
 - cd ..

artifacts:
 - path: output\*

deploy_script:
 - ps: ConvertTo-Json -InputObject $artifacts -Compress | ssh nvaccess@exbi.nvaccess.org nvdaAppveyorDeploy
